version: "3.9"
services:
  api:
    container_name: "storiesque-api"
    build: 
      context: ./
      dockerfile: ./backend/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${API_DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=web"
  db:
    image: postgres
    container_name: "storiesque-db"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./backend/sql/schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
      - ./backend/sql/trigger.sql:/docker-entrypoint-initdb.d/create_trigger.sql
    labels:
      - "traefik.enable=false"
  web:
    container_name: "storiesque-web"
    build: 
      context: ./
      dockerfile: ./frontend/Dockerfile
    environment:
      PUBLIC_API_URL: ${PUBLIC_API_URL}
      PUBLIC_IMG_URL: ${PUBLIC_IMG_URL}
      ORIGIN: ${PUBLIC_WEB_URL}
      PROTOCOL_HEADER: x-forwarded-proto
      HOST_HEADER: x-forwarded-host
    depends_on:
      - api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`${WEB_DOMAIN}`)"
      - "traefik.http.routers.web.tls=true
      - "traefik.http.routers.web.tls.certresolver=le
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=3000"
  s3:
    image: "quay.io/minio/minio:latest"
    container_name: "storiesque-s3"
    command: server /data --console-address ":9090"
    environment:
      MINIO_ROOT_USER: ${S3_USER}
      MINIO_ROOT_PASSWORD: ${S3_PASSWORD}
    ports:
      - "9000:9000"
      - "9090:9090"
    volumes:
      - ./data/minio:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.s3.rule=Host(`${IMG_DOMAIN}`)"
      - "traefik.http.routers.s3.entrypoints=web"
  traefik:
    image: "traefik:v2.9"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesResolvers.le.acme.email=${EMAIL}"
      - "--certificatesResolvers.le.acme.storage=acme.json"
      - "--certificatesResolvers.le.acme.tlsChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
    ports:
      - "80:80"
      - "43:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme.json:/acme.json
    labels:
      # Redirect all HTTP to HTTPS permanently
      - traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)
      - traefik.http.routers.http_catchall.entrypoints=web
      - traefik.http.routers.http_catchall.middlewares=https_redirect
      - traefik.http.middlewares.https_redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https_redirect.redirectscheme.permanent=true
